import streamlit as st
import pandas as pd
import datetime
from src.predict import predict_df

st.set_page_config(page_title="MLB HR Predictor", layout="wide")
st.title("üèüÔ∏è Statcast-Powered Home Run Predictor")

date = st.date_input("Select Date", value=datetime.date.today())
n = st.slider("Number of hitters", 1, 30, 10)

@st.cache_data
def get_data(date_str, top_n):
    return predict_df(date_str, top_n)

date_str = date.strftime("%Y-%m-%d")
df_all = get_data(date_str, n)

available_teams = sorted(df_all["team"].dropna().unique())

if "selected_teams" not in st.session_state:
    st.session_state["selected_teams"] = available_teams

selected_teams = st.multiselect(
    "Select Teams",
    options=available_teams,
    default=st.session_state["selected_teams"],
    key="team_selector_widget"
)

st.session_state["selected_teams"] = selected_teams

status = st.radio(
    "Starter Status",
    ["All", "Confirmed", "Probable"],
    index=0,
    key="status_selector"
)

if st.button("Generate Picks"):
    df = df_all.copy()
    df = df[df["team"].isin(st.session_state["selected_teams"])]
    if status == "Confirmed":
        df = df[df["is_confirmed"]]
    elif status == "Probable":
        df = df[~df["is_confirmed"]]
    df = df.reset_index(drop=True)
    styled = df.style.format({
        "recent_hr_rate":    "{:.1%}",
        "barrel_rate":       "{:.1%}",
        "hr_rate_allowed":   "{:.1%}",
        "composite_score":   "{:.1f}"
    }).background_gradient("Blues", subset=["composite_score"])
    st.dataframe(styled, use_container_width=True)
    st.bar_chart(df.set_index("batter")["composite_score"])

