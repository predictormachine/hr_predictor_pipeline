name: Daily HR Picks

on:
  schedule:
    - cron: '0 12 * * *'
  workflow_dispatch:
    inputs:
      date:
        description: 'Prediction Date (YYYY-MM-DD)'
        required: false
        default: ''

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Fetch data & compute picks
        id: picks
        shell: bash
        run: |
          set -e
          DATE="${{ github.event.inputs.date || '' }}"
          if [ -z "$DATE" ]; then
            DATE=$(date +%F)
          fi

          python -m src.predict "$DATE" 10 > hr_output.txt 2> hr_error.txt || { echo "Prediction script returned a non-zero exit code!"; exit 1; }

          if [ ! -s hr_output.txt ]; then
            echo "hr_output.txt was not generated or is empty; failing job."
            if [ -s hr_error.txt ]; then
              echo "--- STDERR Output ---"
              cat hr_error.txt
              echo "---------------------"
            fi
            echo "RUN_DATE=$DATE" >> "$GITHUB_OUTPUT"
            exit 1
          fi

          {
            echo "HR_PICKS<<EOF"
            cat hr_output.txt
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

          echo "RUN_DATE=$DATE" >> "$GITHUB_OUTPUT"

      - name: Upload Debug Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hr-debug-output-${{ steps.picks.outputs.RUN_DATE }}
          path: |
            hr_output.txt
            hr_error.txt
          retention-days: 7
        if: always()

      - name: Send HR Picks to Slack
        if: ${{ success() && steps.picks.outputs.HR_PICKS != '' }}
        shell: bash
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_HR_PICKS: ${{ steps.picks.outputs.HR_PICKS }}
          RUN_DATE: ${{ steps.picks.outputs.RUN_DATE }}
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y jq
          PAYLOAD=$(jq -n \
            --arg run_date "$RUN_DATE" \
            --arg hr_picks "$SLACK_HR_PICKS" \
            '{
              text: "⚾ Daily HR Picks for \($run_date)! ⚾",
              blocks: [
                {
                  type: "header",
                  text: { type: "plain_text", text: "⚾ Daily HR Picks for \($run_date)! ⚾" }
                },
                {
                  type: "section",
                  text: { type: "mrkdwn", text: "Here are the top predictions:" }
                },
                {
                  type: "section",
                  text: { type: "mrkdwn", text: ("```" + "\n" + $hr_picks + "\n" + "```") }
                }
              ]
            }')
          echo "$PAYLOAD"
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"

